#ifndef FASTCVEXT_H
#define FASTCVEXT_H

/**=============================================================================

@file
   fastcvExt.h

@brief
   Public extended API

Copyright (c) 2014, 2017, 2024 Qualcomm Technologies, Inc. All Rights Reserved.
Qualcomm Technologies Proprietary and Confidential.

=============================================================================**/

//==============================================================================
// Included modules
//==============================================================================
#include "fastcv.h"

//==============================================================================
// Declarations
//==============================================================================

typedef enum
{
   // *************************************************************************************
   //  *  We should never remove or change the order.                                       *
   //  *  If there is new Implementation, need to add before FCV_IMPL_MAX.                  *
   //  *************************************************************************************
   FCV_IMPL_C_ext,
   FCV_IMPL_Venum_ext,
   FCV_IMPL_Qdsp_ext,
   FCV_IMPL_Gpu_ext,
   FCV_IMPL_MAX_ext
} FCV_IMPL_ext;

//------------------------------------------------------------------------------
/// @brief
///    Different APIs referred to by e_<ApiFunctionName>
//------------------------------------------------------------------------------
typedef enum
{
    e_fcv3ChannelTransformAffineClippedBCu8,
    e_fcv3ChannelWarpPerspectiveu8,
    e_fcv3ChannelWarpPerspectiveu8_v2,
    e_fcvAbsDifff32,
    e_fcvAbsDiffs32,
    e_fcvAbsDiffu8,
    e_fcvAbsDiffVc3f32,
    e_fcvAbsDiffVc3s32,
    e_fcvAbsDiffVc3u8,
    e_fcvAbsDiffVc4f32,
    e_fcvAbsDiffVc4s32,
    e_fcvAbsDiffVc4u8,
    e_fcvAbsDiffVf32,
    e_fcvAbsDiffVs32,
    e_fcvAbsDiffVu8,
    e_fcvAdaptiveThresholdGaussian11x11u8,
    e_fcvAdaptiveThresholdGaussian3x3u8,
    e_fcvAdaptiveThresholdGaussian5x5u8,
    e_fcvAdaptiveThresholdMean11x11u8,
    e_fcvAdaptiveThresholdMean3x3u8,
    e_fcvAdaptiveThresholdMean5x5u8,
    e_fcvAddf32,
    e_fcvAdds16,
    e_fcvAddu8u16,
    e_fcvAverages32,
    e_fcvAverageu8,
    e_fcvBGCodeBookClearStaleu8,
    e_fcvBGCodeBookDiffu8,
    e_fcvBGCodeBookUpdateu8,
    e_fcvBilateralFilter5x5u8,
    e_fcvBilateralFilter7x7u8,
    e_fcvBilateralFilter9x9u8,
    e_fcvBitCount32x1u8,
    e_fcvBitCount32x4u8,
    e_fcvBitCount64x1u8,
    e_fcvBitCount64x4u8,
    e_fcvBitCountu32,
    e_fcvBitCountu8,
    e_fcvBitwiseOrs32,
    e_fcvBitwiseOru8,
    e_fcvBlockDotProductf32,
    e_fcvBlockDotProductu8,
    e_fcvBoundingRectangle,
    e_fcvBoxFilter11x11u8,
    e_fcvBoxFilter3x3u8,
    e_fcvBoxFilter5x5u8,
    e_fcvBoxFilterNxNf32,
    e_fcvClusterEuclideanf32,
    e_fcvClusterEuclideanNormed36f32,
    e_fcvClusterEuclideanNormedf32,
    e_fcvClusterEuclideanu8,
    e_fcvColorCbCrSwapu8,
    e_fcvColorRGB565ToBGR565u8,
    e_fcvColorRGB565ToBGR888u8,
    e_fcvColorRGB565ToBGRA8888u8,
    e_fcvColorRGB565ToRGB888u8,
    e_fcvColorRGB565ToRGBA8888u8,
    e_fcvColorRGB565ToYCbCr420Planaru8,
    e_fcvColorRGB565ToYCbCr420PseudoPlanaru8,
    e_fcvColorRGB565ToYCbCr422Planaru8,
    e_fcvColorRGB565ToYCbCr422PseudoPlanaru8,
    e_fcvColorRGB565ToYCbCr444Planaru8,
    e_fcvColorRGB565ToYCbCr444PseudoPlanaru8,
    e_fcvColorRGB888ToBGR565u8,
    e_fcvColorRGB888ToBGR888u8,
    e_fcvColorRGB888ToBGRA8888u8,
    e_fcvColorRGB888ToGrayu8,
    e_fcvColorRGB888ToRGB565u8,
    e_fcvColorRGB888ToRGBA8888u8,
    e_fcvColorRGB888ToYCbCr420Planaru8,
    e_fcvColorRGB888ToYCbCr420PseudoPlanaru8,
    e_fcvColorRGB888ToYCbCr422Planaru8,
    e_fcvColorRGB888ToYCbCr422PseudoPlanaru8,
    e_fcvColorRGB888ToYCbCr444Planaru8,
    e_fcvColorRGB888ToYCbCr444PseudoPlanaru8,
    e_fcvColorRGB888toYCrCbu8_v2,
    e_fcvColorRGBA8888ToBGR565u8,
    e_fcvColorRGBA8888ToBGR888u8,
    e_fcvColorRGBA8888ToBGRA8888u8,
    e_fcvColorRGBA8888ToLABu8,
    e_fcvColorRGBA8888ToRGB565u8,
    e_fcvColorRGBA8888ToRGB888u8,
    e_fcvColorRGBA8888ToYCbCr420Planaru8,
    e_fcvColorRGBA8888ToYCbCr420PseudoPlanaru8,
    e_fcvColorRGBA8888ToYCbCr422Planaru8,
    e_fcvColorRGBA8888ToYCbCr422PseudoPlanaru8,
    e_fcvColorRGBA8888ToYCbCr444Planaru8,
    e_fcvColorRGBA8888ToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr420PlanarToRGB565u8,
    e_fcvColorYCbCr420PlanarToRGB888u8,
    e_fcvColorYCbCr420PlanarToRGBA8888u8,
    e_fcvColorYCbCr420PlanarToYCbCr420PseudoPlanaru8,
    e_fcvColorYCbCr420PlanarToYCbCr422Planaru8,
    e_fcvColorYCbCr420PlanarToYCbCr422PseudoPlanaru8,
    e_fcvColorYCbCr420PlanarToYCbCr444Planaru8,
    e_fcvColorYCbCr420PlanarToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr420PseudoPlanarToRGB565u8,
    e_fcvColorYCbCr420PseudoPlanarToRGB888u8,
    e_fcvColorYCbCr420PseudoPlanarToRGBA8888u8,
    e_fcvColorYCbCr420PseudoPlanarToYCbCr420Planaru8,
    e_fcvColorYCbCr420PseudoPlanarToYCbCr422Planaru8,
    e_fcvColorYCbCr420PseudoPlanarToYCbCr422PseudoPlanaru8,
    e_fcvColorYCbCr420PseudoPlanarToYCbCr444Planaru8,
    e_fcvColorYCbCr420PseudoPlanarToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr422PlanarToRGB565u8,
    e_fcvColorYCbCr422PlanarToRGB888u8,
    e_fcvColorYCbCr422PlanarToRGBA8888u8,
    e_fcvColorYCbCr422PlanarToYCbCr420Planaru8,
    e_fcvColorYCbCr422PlanarToYCbCr420PseudoPlanaru8,
    e_fcvColorYCbCr422PlanarToYCbCr422PseudoPlanaru8,
    e_fcvColorYCbCr422PlanarToYCbCr444Planaru8,
    e_fcvColorYCbCr422PlanarToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr422PseudoPlanarToRGB565u8,
    e_fcvColorYCbCr422PseudoPlanarToRGB888u8,
    e_fcvColorYCbCr422PseudoPlanarToRGBA8888u8,
    e_fcvColorYCbCr422PseudoPlanarToYCbCr420Planaru8,
    e_fcvColorYCbCr422PseudoPlanarToYCbCr420PseudoPlanaru8,
    e_fcvColorYCbCr422PseudoPlanarToYCbCr422Planaru8,
    e_fcvColorYCbCr422PseudoPlanarToYCbCr444Planaru8,
    e_fcvColorYCbCr422PseudoPlanarToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr444PlanarToRGB565u8,
    e_fcvColorYCbCr444PlanarToRGB888u8,
    e_fcvColorYCbCr444PlanarToRGBA8888u8,
    e_fcvColorYCbCr444PlanarToYCbCr420Planaru8,
    e_fcvColorYCbCr444PlanarToYCbCr420PseudoPlanaru8,
    e_fcvColorYCbCr444PlanarToYCbCr422Planaru8,
    e_fcvColorYCbCr444PlanarToYCbCr422PseudoPlanaru8,
    e_fcvColorYCbCr444PlanarToYCbCr444PseudoPlanaru8,
    e_fcvColorYCbCr444PseudoPlanarToRGB565u8,
    e_fcvColorYCbCr444PseudoPlanarToRGB888u8,
    e_fcvColorYCbCr444PseudoPlanarToRGBA8888u8,
    e_fcvColorYCbCr444PseudoPlanarToYCbCr420Planaru8,
    e_fcvColorYCbCr444PseudoPlanarToYCbCr420PseudoPlanaru8,
    e_fcvColorYCbCr444PseudoPlanarToYCbCr422Planaru8,
    e_fcvColorYCbCr444PseudoPlanarToYCbCr422PseudoPlanaru8,
    e_fcvColorYCbCr444PseudoPlanarToYCbCr444Planaru8,
    e_fcvColorYCrCb420PseudoPlanarToRGB8888u8,
    e_fcvColorYCrCbH1V1toRGB888u8,
    e_fcvColorYCrCbH1V2toRGB888u8,
    e_fcvColorYCrCbH2V1toRGB888u8,
    e_fcvColorYCrCbH2V2toRGB888u8,
    e_fcvColorYUV420toRGB565u8,
    e_fcvConAdaTrackf32,
    e_fcvConAdaTracks32,
    e_fcvConAdaTracku8,
    e_fcvConfigBGCodeBookModel,
    e_fcvConvValids16,
    e_fcvCopyRotated17x17u8,
    e_fcvCornerFast10InMaskScoreu8,
    e_fcvCornerFast10InMasku8,
    e_fcvCornerFast10Scoreu8,
    e_fcvCornerFast10u8,
    e_fcvCornerFast9InMaskScoreu8_v3,
    e_fcvCornerFast9InMaskScoreu8_v4,
    e_fcvCornerFast9InMasku8_v2,
    e_fcvCornerFast9Scoreu8_v3,
    e_fcvCornerFast9Scoreu8_v4,
    e_fcvCornerFast9u8_v2,
    e_fcvCornerHarrisAdaptiveu8,
    e_fcvCornerHarrisInMasku8,
    e_fcvCornerHarrisu8,
    e_fcvCreateBGCodeBookModel,
    e_fcvDCTu8,
    e_fcvDeinterleaveu8,
    e_fcvDescriptor17x17u8To36s8,
    e_fcvDescriptorSampledMeanAndVar36f32,
    e_fcvDotProduct11x12u8,
    e_fcvDotProduct128x1s8,
    e_fcvDotProduct128x1u8,
    e_fcvDotProduct128x4s8,
    e_fcvDotProduct128x4u8,
    e_fcvDotProduct36x1s8,
    e_fcvDotProduct36x1u8,
    e_fcvDotProduct36x4s8,
    e_fcvDotProduct36x4u8,
    e_fcvDotProduct64x1s8,
    e_fcvDotProduct64x1u8,
    e_fcvDotProduct64x4s8,
    e_fcvDotProduct64x4u8,
    e_fcvDotProduct8x8u8,
    e_fcvDotProductf32,
    e_fcvDotProductNorm128x4s8,
    e_fcvDotProductNorm128x4u8,
    e_fcvDotProductNorm36x4s8,
    e_fcvDotProductNorm36x4u8,
    e_fcvDotProductNorm64x4s8,
    e_fcvDotProductNorm64x4u8,
    e_fcvDotProducts8,
    e_fcvDotProductu8,
    e_fcvDrawContourInterleavedu8,
    e_fcvDrawContourPlanaru8,
    e_fcvDrawContouru8,
    e_fcvDWT53Tabs16,
    e_fcvDWT53TabTransposes16,
    e_fcvDWTHaarTransposeu8,
    e_fcvDWTHaaru8,
    e_fcvEdgeWeightings16,
    e_fcvElementMultiplyf32,
    e_fcvElementMultiplyu8u16,
    e_fcvFillConvexPolyu8,
    e_fcvFilterCanny3x3u8_v2,
    e_fcvFilterCanny3x3u8_v3,
    e_fcvFilterCorr3x3s8_v2,
    e_fcvFilterCorrSep11x11s16_v3,
    e_fcvFilterCorrSep13x13s16_v3,
    e_fcvFilterCorrSep15x15s16_v3,
    e_fcvFilterCorrSep17x17s16_v3,
    e_fcvFilterCorrSep9x9s16_v3,
    e_fcvFilterCorrSepNxNs16,
    e_fcvFilterDilate3x3u8_v2,
    e_fcvFilterErode3x3u8_v2,
    e_fcvFilterGaussian11x11u8_v2,
    e_fcvFilterGaussian3x3u8_v2,
    e_fcvFilterGaussian5x5s16_v2,
    e_fcvFilterGaussian5x5s32_v2,
    e_fcvFilterGaussian5x5u8_v2,
    e_fcvFilterMedian3x3u8_v2,
    e_fcvFilterSobel3x3u8_v2,
    e_fcvFilterThresholdOtsuu8,
    e_fcvFilterThresholdu8_v2,
    e_fcvFindContoursAllocate,
    e_fcvFindContoursCcompu8,
    e_fcvFindContoursDelete,
    e_fcvFindContoursExternalu8,
    e_fcvFindContoursListu8,
    e_fcvFindContoursTreeu8,
    e_fcvFindConvexHull,
    e_fcvFindForegroundIntegrateImageYCbCr420u32,
    e_fcvFlipu16,
    e_fcvFlipu8,
    e_fcvFloodfillSimpleu8,
    e_fcvGeom3PointPoseEstimatef32,
    e_fcvGeomAffineEvaluatef32,
    e_fcvGeomAffineFitf32,
    e_fcvGeomDistortPoint2x1f32,
    e_fcvGeomDistortPoint2xNf32,
    e_fcvGeomHomographyEvaluatef32,
    e_fcvGeomHomographyEvaluatef32_v2,
    e_fcvGeomHomographyFitf32,
    e_fcvGeomPoseEvaluateErrorf32,
    e_fcvGeomPoseEvaluatef32,
    e_fcvGeomPoseOptimizeGNf32,
    e_fcvGeomPoseRefineGNf32,
    e_fcvGeomPoseUpdatef32,
    e_fcvGeomProjectPoint3x1f32,
    e_fcvGeomProjectPoint3xNf32,
    e_fcvGeomUndistortPoint2x1f32,
    e_fcvGeomUndistortPoint2xNf32,
    e_fcvGetPerspectiveTransformf32,
    e_fcvHammingDistance32x1u8,
    e_fcvHammingDistance32x1u8a4,
    e_fcvHammingDistance32x4u8a4,
    e_fcvHammingDistance64x1u8,
    e_fcvHammingDistance64x1u8a4,
    e_fcvHammingDistance64x4u8,
    e_fcvHammingDistance64x4u8a4,
    e_fcvHammingDistanceu8,
    e_fcvHoughCircleu8,
    e_fcvHoughLineu8,
    e_fcvIDCTs16,
    e_fcvIDWT53Tabs16,
    e_fcvIDWT53TabTransposes16,
    e_fcvIDWTHaars16,
    e_fcvIDWTHaarTransposes16,
    e_fcvImageDetectEdgePixelsu8,
    e_fcvImageDifff32_v2,
    e_fcvImageDiffs16_v2,
    e_fcvImageDiffu8_v2,
    e_fcvImageDiffu8f32_v3,
    e_fcvImageDiffu8s8_v2,
    e_fcvImageGradientInterleavedf32_v2,
    e_fcvImageGradientInterleaveds16_v2,
    e_fcvImageGradientPlanarf32_v2,
    e_fcvImageGradientPlanars16_v2,
    e_fcvImageGradientSobelInterleavedf32_v2,
    e_fcvImageGradientSobelInterleaveds16_v2,
    e_fcvImageGradientSobelInterleaveds16_v3,
    e_fcvImageGradientSobelPlanarf32_v2,
    e_fcvImageGradientSobelPlanarf32f32_v2,
    e_fcvImageGradientSobelPlanars16_v2,
    e_fcvImageGradientSobelPlanars16_v3,
    e_fcvImageGradientSobelPlanars8_v2,
    e_fcvImageHistogramEqualizeu8,
    e_fcvImageIntensityHistogram,
    e_fcvImageIntensityStats,
    e_fcvImageMomentsf32,
    e_fcvImageMomentss32,
    e_fcvImageMomentsu8,
    e_fcvImageSegmentationRegionGrow,
    e_fcvImageSpatialHistogramu8,
    e_fcvIntegrateImageLine64u8,
    e_fcvIntegrateImageLineu8,
    e_fcvIntegrateImageu8_v2,
    e_fcvIntegrateImageu8u64,
    e_fcvIntegrateImageYCbCr420PseudoPlanaru8,
    e_fcvIntegratePatch12x12u8_v2,
    e_fcvIntegratePatch18x18u8_v2,
    e_fcvIntegratePatchu8_v2,
    e_fcvInterleaveu8,
    e_fcvJacobianSE2f32,
    e_fcvKDTreeCreate36s8f32,
    e_fcvKDTreeDestroy36s8f32,
    e_fcvKDTreeQuery36s8f32,
    e_fcvKMeansTreeSearch36x10s8,
    e_fcvLinearSearch8x36s8,
    e_fcvLinearSearchPrepare8x36s8_v2,
    e_fcvLocalHarrisMaxu8,
    e_fcvMatrixMultiplyf32,
    e_fcvMatrixMultiplys8s32,
    e_fcvMeanShiftf32,
    e_fcvMeanShifts32,
    e_fcvMeanShiftu8,
    e_fcvMserExtNN8u8,
    e_fcvMserExtu8,
    e_fcvMserExtu8_v2,
    e_fcvMserExtu8_v3,
    e_fcvMserInit,
    e_fcvMserNN8Init,
    e_fcvMserNN8u8,
    e_fcvMserRelease,
    e_fcvMseru8,
    e_fcvMseru8_v2,
    e_fcvNCCPatchOnCircle8x8u8_v2,
    e_fcvNCCPatchOnSquare8x8u8_v2,
    e_fcvPointPolygonTest,
    e_fcvPyramidAllocate,
    e_fcvPyramidAllocate_v2,
    e_fcvPyramidCreatef32,
    e_fcvPyramidCreatef32_v2,
    e_fcvPyramidCreateu8,
    e_fcvPyramidCreateu8_v2,
    e_fcvPyramidDelete,
    e_fcvPyramidDelete_v2,
    e_fcvPyramidSobelGradientCreatef32,
    e_fcvPyramidSobelGradientCreatei16,
    e_fcvPyramidSobelGradientCreatei8,
    e_fcvReleaseBGCodeBookModel,
    e_fcvRemapRGBA8888BLu8,
    e_fcvRemapRGBA8888NNu8,
    e_fcvScaleDown3To2u8,
    e_fcvScaleDownBLu8,
    e_fcvScaleDownBy2Gaussian5x5u8,
    e_fcvScaleDownBy2Gaussian5x5u8_v2,
    e_fcvScaleDownBy2u8_v2,
    e_fcvScaleDownBy4u8_v2,
    e_fcvScaleDownMNInterleaveu8,
    e_fcvScaleDownMNu8,
    e_fcvScaleDownNNu8,
    e_fcvScaleDownu8_v2,
    e_fcvScaleUpBy2Gaussian5x5u8_v2,
    e_fcvScaleUpPolyInterleaveu8,
    e_fcvScaleUpPolyu8,
    e_fcvSegmentFGMasku8,
    e_fcvSetElementsc3f32,
    e_fcvSetElementsc3s32,
    e_fcvSetElementsc3u8,
    e_fcvSetElementsc4f32,
    e_fcvSetElementsc4s32,
    e_fcvSetElementsc4u8,
    e_fcvSetElementsf32,
    e_fcvSetElementss32,
    e_fcvSetElementsu8,
    e_fcvSharedMemAlloc,
    e_fcvSharedMemFree,
    e_fcvSolveCholeskyf32,
    e_fcvSolvef32,
    e_fcvSolveLDLf32,
    e_fcvSort8Scoresf32,
    e_fcvSumOfAbsoluteDiffs8x8u8_v2,
    e_fcvSumOfSquaredDiffs36x4s8,
    e_fcvSumOfSquaredDiffs36xNs8,
    e_fcvSumOfSquaredDiffsf32,
    e_fcvSumOfSquaredDiffss8,
    e_fcvSumOfSquaredDiffsu8,
    e_fcvSVDf32,
    e_fcvTiltedIntegralu8s32,
    e_fcvTrackBMOpticalFlow16x16u8,
    e_fcvTrackLKOpticalFlowf32,
    e_fcvTrackLKOpticalFlowu8,
    e_fcvTrackLKOpticalFlowu8_v2,
    e_fcvTransformAffine8x8u8_v2,
    e_fcvTransformAffineClippedu8,
    e_fcvTransformAffineu8_v2,
    e_fcvTransposef32,
    e_fcvTransposeu16,
    e_fcvTransposeu8,
    e_fcvUpdateMotionHistoryu8s32,
    e_fcvUpsample2DInterleavedu8,
    e_fcvUpsample2Du8,
    e_fcvUpsampleHorizontalInterleavedu8,
    e_fcvUpsampleHorizontalu8,
    e_fcvUpsampleVerticalInterleavedu8,
    e_fcvUpsampleVerticalu8,
    e_fcvVecNormalize36s8f32,
    e_fcvWarpPerspectiveu8,
    e_fcvWarpPerspectiveu8_v2,
    e_fcvAddScalarf32,
    e_fcvAddScalars16,
    e_fcvColorRGB888ToHSV888u8,
    e_fcvCrossProduct3x1f32,
    e_fcvCornerRefineSubPixu8,
    e_fcvGoodFeatureToTracku8,
    e_fcvFFTu8,
    e_fcvFilterCorrNxNu8f32,
    e_fcvFilterCorrNxNu8s16,
    e_fcvFilterCorrNxNu8,
    e_fcvFilterCorrSepMxNu8,
    e_fcvFilterDilateNxNu8,
    e_fcvFilterErodeNxNu8,
    e_fcvFilterSobel3x3u8s16,
    e_fcvFilterSobel5x5u8s16,
    e_fcvFilterSobel7x7u8s16,
    e_fcvFilterThresholdRangeu8,
    e_fcvFlipRGB888u8,
    e_fcvFloodfillMergedu8,
    e_fcvIFFTf32,
    e_fcvInvertAffineTransformf32,
    e_fcvMinMaxLocf32,
    e_fcvMinMaxLocs16,
    e_fcvMinMaxLocs32,
    e_fcvMinMaxLocu16,
    e_fcvMinMaxLocu32,
    e_fcvMinMaxLocu8,
    e_fcvMultiplyScalarf32,
    e_fcvMultiplyScalars16,
    e_fcvNCCPatchesOnRectu8,
    e_fcvNormalizeLocalBoxf32,
    e_fcvNormalizeLocalBoxu8,
    e_fcvRemapu8,
    e_fcvSolveLUf32,
    e_fcvTransposeRGB888u8,
    e_fcvFilterCannyu8,
    e_fcvGLBPu8,
    e_fcvGeomHomographyRobustFitf32,
    e_fcvIntegratePatchu8_v3,
    e_fcvBilateralFilter5x5u8_v2,
    e_fcvBilateralFilter7x7u8_v2,
    e_fcvBilateralFilter9x9u8_v2,
    e_fcvBilateralFilterRecursiveu8,
    e_fcvBitwiseAndu8,
    e_fcvBitwiseXoru8,
    e_fcvBitwiseNotu8,
    e_fcvAddu8,
    e_fcvAdds16_v2,
    e_fcvAddu16u8u16,
    e_fcvSubtractu8,
    e_fcvSubtracts16,
    e_fcvSubtractu8s16,
    e_fcvSVMPredict2Classf32,
    e_fcvElementMultiplys16,
    e_fcvElementMultiplyu8s16,
    e_fcvElementMultiplyu8,
    e_fcvAddWeightedu8,
    e_fcvAddSquaredu8u16,
    e_fcvTableLookupu8,
    e_fcvConvertDepthu8s16,
    e_fcvConvertDepths16u8,
    e_fcvWarpPerspectiveu8_v3,
    e_fcvTransformAffineClippedu8_v2,
    e_fcvMagnitudes16,
    e_fcvPhases16,
    e_fcvImageSegmentationSeedRegionGrows16,
    e_fcvChannelCombine2Planesu8,
    e_fcvChannelCombine3Planesu8,
    e_fcvChannelCombine4Planesu8,
    e_fcvChannelExtractu8,
    e_fcvScaleu8,
    e_fcvFilterMedianMxNs16,
    e_fcvFilterConvolveMxNu8s16,
    e_fcvFilterConvolveMxNu8,
    e_fcv2PlaneWarpPerspectiveu8,
    e_fcvBoxFilter3x3u8_v2,
    e_fcvFilterDilate3x3u8_v3,
    e_fcvFilterErode3x3u8_v3,
    e_fcvFilterGaussian3x3u8_v3,
    e_fcvFilterMedian3x3u8_v3,
    e_fcvFilterThresholdRangeu8_v2,
    e_fcvFilterThresholdu8_v3,
    e_fcvFindMultipleMaximau8,
    e_fcvGeomHomographyFitf32_v2,
    e_fcvGeomHomographyRobustFitf32_v2,
    e_fcvICPJacobianErrorSE3f32,
    e_fcvImageDetectLineSegmentsu8,
    e_fcvImageSpatialHistogramu8_v2,
    e_fcvScaleDownBy2Gaussian3x3u8,
    e_fcvConvertDepthImageToPointCloudf32,
    e_fcvCornerHarrisScoreu8,
    e_fcvDepthFusion8x8x8xNs16,
    e_fcvImageIntensityStats_v2,
    e_fcvMinMaxLocf32_v2,
    e_fcvMinMaxLocs16_v2,
    e_fcvMinMaxLocs32_v2,
    e_fcvMinMaxLocu16_v2,
    e_fcvMinMaxLocu32_v2,
    e_fcvMinMaxLocu8_v2,
    e_fcvPyramidAllocate_v3,
    e_fcvPyramidCreateu8_v3,
    e_fcvRegisterDepthImagef32,
    e_fcvRemapu8_v2,
    e_fcvRotateImageu8,
    e_fcvRotateImageInterleavedu8,
    e_fcvScaleu8_v2,
    e_fcvTransformAffineClippedu8_v3,
    e_fcvTrackLKOpticalFlowu8_v3,
    e_fcvUndistortDisparityConvertDepthf32,
    e_fcvWarpPerspectiveu8_v4,
	e_fcvAbsDiffu8_v2,
	e_fcvAbsDiffs32_v2,
    e_fcvAbsDifff32_v2,
    e_MAX
} FCV_API_enum;


//---------------------------------------------------------------------------
/// @brief
///  Sets the desired API to run on desired core if possible.
///
/// @details
///
///
///
///
/// @param API
///   The API which the user wants to set to a core.
///   Required: should be e_<ApiFunctionName>
///
/// @param FCV_IMPL_default
///   The derired core implementation.
///   Required: should be a from enum FCV_IMPL
//---------------------------------------------------------------------------

void
fcvSetFunctionApiToCore( FCV_API_enum API,FCV_IMPL_ext Processor_core);
#ifdef __cplusplus
extern "C"
{
#endif

//==============================================================================
// Declarations
//==============================================================================

//------------------------------------------------------------------------------
/// @brief
///    Defines operational mode of interface to allow the end developer to
///    dictate how the target optimized implementation should behave.
//------------------------------------------------------------------------------
typedef enum
{
   /// Target-optimized implementation uses as much QDSP Unit as possible
   /// For general DSP offloading, FASTCV_OP_EXT_QDSP is recommended
   /// For mobile targets, use FASTCV_OP_EXT_QDSP option
   FASTCV_OP_EXT_QDSP,

   /// Target-optimized implementation uses as much Graphics Processing Unit as possible
   FASTCV_OP_EXT_GPU,

   /// Target-optimized implementation uses as much ADSP Unit as possible on supported targets
   /// This mode is supported on IOT target only
   FASTCV_OP_EXT_ADSP,

   /// Target-optimized implementation uses as much CDSP Unit as possible on supported targets
   /// This mode is supported on IOT target only
   FASTCV_OP_EXT_CDSP,

   /// Target-optimized implementation uses as much MDSP Unit as possible on supported targets
   /// This mode is supported on IOT target only
   FASTCV_OP_EXT_MDSP

} fcvOperationModeExt;

//---------------------------------------------------------------------------
/// @brief
///   Selects HW units for all routines at run-time.  Can be called anytime to
///   update choice.
///
/// @param mode
///   See enum for details.
///
/// @return
///   FASTCV_SUCCESS if successful.
///   FASTCV_EFAIL if unsuccessful.
///
/// @ingroup misc
//---------------------------------------------------------------------------

FASTCV_API fcvStatus
fcvSetOperationModeExt( fcvOperationModeExt modeExt );

#ifdef __cplusplus
}//extern "C"
#endif

#endif
